"use strict";(()=>{var e={};e.id=31,e.ids=[31],e.modules={11185:e=>{e.exports=require("mongoose")},30517:e=>{e.exports=require("next/dist/compiled/next-server/app-route.runtime.prod.js")},13137:(e,t,r)=>{r.r(t),r.d(t,{headerHooks:()=>y,originalPathname:()=>h,patchFetch:()=>k,requestAsyncStorage:()=>l,routeModule:()=>c,serverHooks:()=>g,staticGenerationAsyncStorage:()=>m,staticGenerationBailout:()=>f});var a={};r.r(a),r.d(a,{GET:()=>p});var s=r(95419),n=r(69108),o=r(99678),i=r(45989),d=r(78596),u=r(78070);let p=async e=>{try{await (0,d.T)();let e=await i.i.find({}).sort({createdAt:-1}).populate("userId","username");return u.default.json(e)}catch(e){throw console.log(e),Error("Failed to fetch tasks")}},c=new s.AppRouteRouteModule({definition:{kind:n.x.APP_ROUTE,page:"/api/task/route",pathname:"/api/task",filename:"route",bundlePath:"app/api/task/route"},resolvedPagePath:"C:\\Users\\KIIT\\Documents\\PROJECTS\\Next14 Task Manager\\src\\app\\api\\task\\route.js",nextConfigOutput:"",userland:a}),{requestAsyncStorage:l,staticGenerationAsyncStorage:m,serverHooks:g,headerHooks:y,staticGenerationBailout:f}=c,h="/api/task/route";function k(){return(0,o.patchFetch)({serverHooks:g,staticGenerationAsyncStorage:m})}},95419:(e,t,r)=>{e.exports=r(30517)},45989:(e,t,r)=>{r.d(t,{i:()=>d,n:()=>i});let{default:a,mongo:s}=r(11185),n=new a.Schema({username:{type:String,required:!0,unique:!0,min:3,max:20},email:{type:String,required:!0,unique:!0,max:50},password:{type:String,min:6},img:{type:String,default:""},isAdmin:{type:Boolean,default:!1},isUser:{type:Boolean,default:!1},isThirdPerson:{type:Boolean,default:!0},createdAt:{type:Date,default:Date.now()},tasks:[{type:a.Schema.Types.ObjectId,ref:"Task"}]}),o=new a.Schema({title:{type:String,required:!0},desc:{type:String,required:!0},status:{type:String,default:"assigned",enum:["assigned","completed"]},createdAt:{type:Date,default:Date.now()},userId:{type:a.Schema.Types.ObjectId,ref:"User"}}),i=a.models.User||a.model("User",n),d=a.models.Task||a.model("Task",o)},78596:(e,t,r)=>{r.d(t,{T:()=>n});let{default:a}=r(11185),s={},n=async()=>{try{if(s.isConnected){console.log("Using existing connection");return}let e=await a.connect(process.env.MONGO,{useNewUrlParser:!0,useUnifiedTopology:!0});s.isConnected=e.connections[0].readyState}catch(e){throw Error("Error connecting to database")}}}};var t=require("../../../webpack-runtime.js");t.C(e);var r=e=>t(t.s=e),a=t.X(0,[638,70],()=>r(13137));module.exports=a})();